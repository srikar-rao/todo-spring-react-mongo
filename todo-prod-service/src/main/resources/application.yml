management:
  server:
    port: 8080  # Actuator runs on its own port (recommended for prod)
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true  # Enable histogram buckets for latency
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99  # Useful percentiles for latency monitoring
    enable:
      http: true  # Ensures HTTP metrics are emitted

  tracing:
    sampling:
      probability: 1.0   # 100% sampling for dev; reduce for production
#  zipkin:
#    tracing:
#      endpoint: http://localhost:9411/api/v2/spans


spring:
  application:
    name: todo-service

  threads:
    virtual:
      enabled: true

  data:
    mongodb:
      uri: "${MONGO_URI}"
      database: "${MONGO_DB_NAME}"

  jackson:
    time-zone: UTC
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  security:
    enabled: false
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9095/realms/todo-web-app
      client:
        registration:
          keycloak:
            client-id: todo-client
#            client-secret: xxxx       # Only if confidential client; omit for public
#            authorization-grant-type: client_credentials
            scope: openid
        provider:
          keycloak:
            issuer-uri: http://localhost:9095/realms/todo-realm

server:
  port: 8080
  servlet:
    context-path: /todo-service

logging:
  level:
    root: INFO
    com.prod.todo: DEBUG
    org.springframework.transaction: DEBUG
    org.springframework.orm.jpa: DEBUG
    org.springframework.jdbc.datasource.DataSourceTransactionManager: DEBUG

springdoc:
  swagger-ui:
    path: /docs
    display-request-duration: true
    persist-authorization: true
  api-docs:
    path: /v3/api-docs
